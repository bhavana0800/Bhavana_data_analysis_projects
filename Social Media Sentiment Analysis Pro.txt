Social Media Sentiment Analysis Project

Objective:
The aim of this project is to analyze the sentiment of social media posts to determine whether they are positive, neutral, or negative.

Step 1: Import Libraries
import tweepy
import pandas as pd
from textblob import TextBlob
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud

Step 2: Data Collection
Use the Tweepy library to fetch data from Twitter or use a preloaded dataset for analysis. For now, letâ€™s assume you have a dataset in a CSV file.
# Load the dataset
df = pd.read_csv('social_media_data.csv')  # Adjust with your file path
df.head()

Step 3: Data Preprocessing
# Function to clean the tweets
import re

def clean_tweet(tweet):
    tweet = re.sub(r'http\S+', '', tweet)  # Remove URLs
    tweet = re.sub(r'@\w+', '', tweet)     # Remove mentions
    tweet = re.sub(r'#', '', tweet)        # Remove hashtags
    tweet = re.sub(r'[^\w\s]', '', tweet)  # Remove special characters
    return tweet

# Apply cleaning function to the tweets
df['cleaned_tweet'] = df['text'].apply(clean_tweet)

Step 4: Sentiment Analysis
# Function to classify sentiment
def get_sentiment(tweet):
    analysis = TextBlob(tweet)
    if analysis.sentiment.polarity > 0:
        return 'Positive'
    elif analysis.sentiment.polarity < 0:
        return 'Negative'
    else:
        return 'Neutral'

# Apply sentiment analysis
df['sentiment'] = df['cleaned_tweet'].apply(get_sentiment)
df.head()

Step 5: Data Visualization
Sentiment Distribution:
sns.countplot(x='sentiment', data=df, palette='coolwarm')
plt.title('Sentiment Distribution')
plt.show()

Word Cloud:
all_words = ' '.join([text for text in df['cleaned_tweet']])
wordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(all_words)

plt.figure(figsize=(10, 7))
plt.imshow(wordcloud, interpolation="bilinear")
plt.axis('off')
plt.show()

Step 6: Save the Results
df.to_csv('final_sentiment_analysis.csv', index=False)

Summary:
This project collects social media posts, processes the text data to clean it, applies sentiment analysis using the TextBlob library, and visualizes the results through sentiment distribution and word clouds.

Project Overview
This project aims to analyze the sentiment of social media posts and classify them as Positive, Negative, or Neutral. By using Python for data preprocessing and sentiment analysis, and visualizing the results, it provides insights into the overall sentiment trends of social media data.

Features:
Cleans raw social media text by removing unnecessary characters like URLs, mentions, and hashtags.
Analyzes the sentiment using TextBlob and classifies the data into three categories: Positive, Negative, and Neutral.
Visualizes the sentiment distribution and generates a word cloud for frequently occurring words in the data.

Tech Stack
Python
Libraries: Tweepy, Pandas, TextBlob, Matplotlib, Seaborn, WordCloud

Visualization:
The project includes:

Sentiment Distribution: A bar chart showing the count of Positive, Neutral, and Negative sentiments.
Word Cloud: A visualization of the most frequent words used in the social media posts.

Future Improvements:
Integrating a live stream of tweets using Twitter's API.
Expanding the analysis with machine learning classifiers for more advanced sentiment detection.